{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/hayyaanshakeel/Desktop/untitled%20folder%203/jsevenour/components/cart/actions.ts"],"sourcesContent":["'use server';\n\nimport { TAGS } from 'lib/constants';\nimport {\n  addToCart,\n  createCart,\n  getCart,\n  removeFromCart,\n  updateCart\n} from 'lib/shopify';\nimport { revalidateTag } from 'next/cache';\nimport { cookies } from 'next/headers';\nimport { redirect } from 'next/navigation';\n\nexport async function addItem(\n  prevState: any,\n  selectedVariantId: string | undefined\n) {\n  if (!selectedVariantId) {\n    return 'Error adding item to cart';\n  }\n\n  try {\n    await addToCart([{ merchandiseId: selectedVariantId, quantity: 1 }]);\n    revalidateTag(TAGS.cart);\n  } catch (e) {\n    return 'Error adding item to cart';\n  }\n}\n\nexport async function removeItem(prevState: any, merchandiseId: string) {\n  try {\n    const cart = await getCart();\n\n    if (!cart) {\n      return 'Error fetching cart';\n    }\n\n    const lineItem = cart.lines.find(\n      (line) => line.merchandise.id === merchandiseId\n    );\n\n    if (lineItem && lineItem.id) {\n      await removeFromCart([lineItem.id]);\n      revalidateTag(TAGS.cart);\n    } else {\n      return 'Item not found in cart';\n    }\n  } catch (e) {\n    return 'Error removing item from cart';\n  }\n}\n\nexport async function updateItemQuantity(\n  prevState: any,\n  payload: {\n    merchandiseId: string;\n    quantity: number;\n  }\n) {\n  const { merchandiseId, quantity } = payload;\n\n  try {\n    const cart = await getCart();\n\n    if (!cart) {\n      return 'Error fetching cart';\n    }\n\n    const lineItem = cart.lines.find(\n      (line) => line.merchandise.id === merchandiseId\n    );\n\n    if (lineItem && lineItem.id) {\n      if (quantity === 0) {\n        await removeFromCart([lineItem.id]);\n      } else {\n        await updateCart([\n          {\n            id: lineItem.id,\n            merchandiseId,\n            quantity\n          }\n        ]);\n      }\n    } else if (quantity > 0) {\n      // If the item doesn't exist in the cart and quantity > 0, add it\n      await addToCart([{ merchandiseId, quantity }]);\n    }\n\n    revalidateTag(TAGS.cart);\n  } catch (e) {\n    console.error(e);\n    return 'Error updating item quantity';\n  }\n}\n\nexport async function redirectToCheckout() {\n  let cart = await getCart();\n  redirect(cart!.checkoutUrl);\n}\n\nexport async function createCartAndSetCookie() {\n  let cart = await createCart();\n  (await cookies()).set('cartId', cart.id!);\n}\n"],"names":[],"mappings":";;;;;;IAcsB,UAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///Users/hayyaanshakeel/Desktop/untitled%20folder%203/jsevenour/components/product/product-context.tsx"],"sourcesContent":["'use client';\n\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport React, { createContext, useContext, useMemo, useOptimistic } from 'react';\n\ntype ProductState = {\n  [key: string]: string;\n} & {\n  image?: string;\n};\n\ntype ProductContextType = {\n  state: ProductState;\n  updateOption: (name: string, value: string) => ProductState;\n  updateImage: (index: string) => ProductState;\n};\n\nconst ProductContext = createContext<ProductContextType | undefined>(undefined);\n\nexport function ProductProvider({ children }: { children: React.ReactNode }) {\n  const searchParams = useSearchParams();\n\n  const getInitialState = () => {\n    const params: ProductState = {};\n    for (const [key, value] of searchParams.entries()) {\n      params[key] = value;\n    }\n    return params;\n  };\n\n  const [state, setOptimisticState] = useOptimistic(\n    getInitialState(),\n    (prevState: ProductState, update: ProductState) => ({\n      ...prevState,\n      ...update\n    })\n  );\n\n  const updateOption = (name: string, value: string) => {\n    const newState = { [name]: value };\n    setOptimisticState(newState);\n    return { ...state, ...newState };\n  };\n\n  const updateImage = (index: string) => {\n    const newState = { image: index };\n    setOptimisticState(newState);\n    return { ...state, ...newState };\n  };\n\n  const value = useMemo(\n    () => ({\n      state,\n      updateOption,\n      updateImage\n    }),\n    [state]\n  );\n\n  return <ProductContext.Provider value={value}>{children}</ProductContext.Provider>;\n}\n\nexport function useProduct() {\n  const context = useContext(ProductContext);\n  if (context === undefined) {\n    throw new Error('useProduct must be used within a ProductProvider');\n  }\n  return context;\n}\n\nexport function useUpdateURL() {\n  const router = useRouter();\n\n  return (state: ProductState) => {\n    const newParams = new URLSearchParams(window.location.search);\n    Object.entries(state).forEach(([key, value]) => {\n      newParams.set(key, value);\n    });\n    router.push(`?${newParams.toString()}`, { scroll: false });\n  };\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAHA;;;;AAiBA,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAkC;AAE9D,SAAS,gBAAgB,EAAE,QAAQ,EAAiC;IACzE,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IAEnC,MAAM,kBAAkB;QACtB,MAAM,SAAuB,CAAC;QAC9B,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,aAAa,OAAO,GAAI;YACjD,MAAM,CAAC,IAAI,GAAG;QAChB;QACA,OAAO;IACT;IAEA,MAAM,CAAC,OAAO,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAC9C,mBACA,CAAC,WAAyB,SAAyB,CAAC;YAClD,GAAG,SAAS;YACZ,GAAG,MAAM;QACX,CAAC;IAGH,MAAM,eAAe,CAAC,MAAc;QAClC,MAAM,WAAW;YAAE,CAAC,KAAK,EAAE;QAAM;QACjC,mBAAmB;QACnB,OAAO;YAAE,GAAG,KAAK;YAAE,GAAG,QAAQ;QAAC;IACjC;IAEA,MAAM,cAAc,CAAC;QACnB,MAAM,WAAW;YAAE,OAAO;QAAM;QAChC,mBAAmB;QACnB,OAAO;YAAE,GAAG,KAAK;YAAE,GAAG,QAAQ;QAAC;IACjC;IAEA,MAAM,QAAQ,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAClB,IAAM,CAAC;YACL;YACA;YACA;QACF,CAAC,GACD;QAAC;KAAM;IAGT,qBAAO,8OAAC,eAAe,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AACjD;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;AAEO,SAAS;IACd,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,OAAO,CAAC;QACN,MAAM,YAAY,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;QAC5D,OAAO,OAAO,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,KAAK,MAAM;YACzC,UAAU,GAAG,CAAC,KAAK;QACrB;QACA,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,UAAU,QAAQ,IAAI,EAAE;YAAE,QAAQ;QAAM;IAC1D;AACF","debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file:///Users/hayyaanshakeel/Desktop/untitled%20folder%203/jsevenour/components/cart/cart-context.tsx"],"sourcesContent":["'use client';\n\nimport type {\n  Cart,\n  CartItem,\n  Product,\n  ProductVariant\n} from 'lib/shopify/types';\nimport React, {\n  createContext,\n  use,\n  useContext,\n  useMemo,\n  useOptimistic\n} from 'react';\n\ntype UpdateType = 'plus' | 'minus' | 'delete';\n\ntype CartAction =\n  | {\n      type: 'UPDATE_ITEM';\n      payload: { merchandiseId: string; updateType: UpdateType };\n    }\n  | {\n      type: 'ADD_ITEM';\n      payload: { variant: ProductVariant; product: Product };\n    };\n\ntype CartContextType = {\n  cartPromise: Promise<Cart | undefined>;\n};\n\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\nfunction calculateItemCost(quantity: number, price: string): string {\n  return (Number(price) * quantity).toString();\n}\n\nfunction updateCartItem(\n  item: CartItem,\n  updateType: UpdateType\n): CartItem | null {\n  if (updateType === 'delete') return null;\n\n  const newQuantity =\n    updateType === 'plus' ? item.quantity + 1 : item.quantity - 1;\n  if (newQuantity === 0) return null;\n\n  const singleItemAmount = Number(item.cost.totalAmount.amount) / item.quantity;\n  const newTotalAmount = calculateItemCost(\n    newQuantity,\n    singleItemAmount.toString()\n  );\n\n  return {\n    ...item,\n    quantity: newQuantity,\n    cost: {\n      ...item.cost,\n      totalAmount: {\n        ...item.cost.totalAmount,\n        amount: newTotalAmount\n      }\n    }\n  };\n}\n\nfunction createOrUpdateCartItem(\n  existingItem: CartItem | undefined,\n  variant: ProductVariant,\n  product: Product\n): CartItem {\n  const quantity = existingItem ? existingItem.quantity + 1 : 1;\n  const totalAmount = calculateItemCost(quantity, variant.price.amount);\n\n  return {\n    id: existingItem?.id,\n    quantity,\n    cost: {\n      totalAmount: {\n        amount: totalAmount,\n        currencyCode: variant.price.currencyCode\n      }\n    },\n    merchandise: {\n      id: variant.id,\n      title: variant.title,\n      selectedOptions: variant.selectedOptions,\n      product: {\n        id: product.id,\n        handle: product.handle,\n        title: product.title,\n        featuredImage: product.featuredImage\n      }\n    }\n  };\n}\n\nfunction updateCartTotals(\n  lines: CartItem[]\n): Pick<Cart, 'totalQuantity' | 'cost'> {\n  const totalQuantity = lines.reduce((sum, item) => sum + item.quantity, 0);\n  const totalAmount = lines.reduce(\n    (sum, item) => sum + Number(item.cost.totalAmount.amount),\n    0\n  );\n  const currencyCode = lines[0]?.cost.totalAmount.currencyCode ?? 'USD';\n\n  return {\n    totalQuantity,\n    cost: {\n      subtotalAmount: { amount: totalAmount.toString(), currencyCode },\n      totalAmount: { amount: totalAmount.toString(), currencyCode },\n      totalTaxAmount: { amount: '0', currencyCode }\n    }\n  };\n}\n\nfunction createEmptyCart(): Cart {\n  return {\n    id: undefined,\n    checkoutUrl: '',\n    totalQuantity: 0,\n    lines: [],\n    cost: {\n      subtotalAmount: { amount: '0', currencyCode: 'USD' },\n      totalAmount: { amount: '0', currencyCode: 'USD' },\n      totalTaxAmount: { amount: '0', currencyCode: 'USD' }\n    }\n  };\n}\n\nfunction cartReducer(state: Cart | undefined, action: CartAction): Cart {\n  const currentCart = state || createEmptyCart();\n\n  switch (action.type) {\n    case 'UPDATE_ITEM': {\n      const { merchandiseId, updateType } = action.payload;\n      const updatedLines = currentCart.lines\n        .map((item) =>\n          item.merchandise.id === merchandiseId\n            ? updateCartItem(item, updateType)\n            : item\n        )\n        .filter(Boolean) as CartItem[];\n\n      if (updatedLines.length === 0) {\n        return {\n          ...currentCart,\n          lines: [],\n          totalQuantity: 0,\n          cost: {\n            ...currentCart.cost,\n            totalAmount: { ...currentCart.cost.totalAmount, amount: '0' }\n          }\n        };\n      }\n\n      return {\n        ...currentCart,\n        ...updateCartTotals(updatedLines),\n        lines: updatedLines\n      };\n    }\n    case 'ADD_ITEM': {\n      const { variant, product } = action.payload;\n      const existingItem = currentCart.lines.find(\n        (item) => item.merchandise.id === variant.id\n      );\n      const updatedItem = createOrUpdateCartItem(\n        existingItem,\n        variant,\n        product\n      );\n\n      const updatedLines = existingItem\n        ? currentCart.lines.map((item) =>\n            item.merchandise.id === variant.id ? updatedItem : item\n          )\n        : [...currentCart.lines, updatedItem];\n\n      return {\n        ...currentCart,\n        ...updateCartTotals(updatedLines),\n        lines: updatedLines\n      };\n    }\n    default:\n      return currentCart;\n  }\n}\n\nexport function CartProvider({\n  children,\n  cartPromise\n}: {\n  children: React.ReactNode;\n  cartPromise: Promise<Cart | undefined>;\n}) {\n  return (\n    <CartContext.Provider value={{ cartPromise }}>\n      {children}\n    </CartContext.Provider>\n  );\n}\n\nexport function useCart() {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n\n  const initialCart = use(context.cartPromise);\n  const [optimisticCart, updateOptimisticCart] = useOptimistic(\n    initialCart,\n    cartReducer\n  );\n\n  const updateCartItem = (merchandiseId: string, updateType: UpdateType) => {\n    updateOptimisticCart({\n      type: 'UPDATE_ITEM',\n      payload: { merchandiseId, updateType }\n    });\n  };\n\n  const addCartItem = (variant: ProductVariant, product: Product) => {\n    updateOptimisticCart({ type: 'ADD_ITEM', payload: { variant, product } });\n  };\n\n  return useMemo(\n    () => ({\n      cart: optimisticCart,\n      updateCartItem,\n      addCartItem\n    }),\n    [optimisticCart]\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file:///Users/hayyaanshakeel/Desktop/untitled%20folder%203/jsevenour/components/cart/add-to-cart.tsx"],"sourcesContent":["'use client';\n\nimport clsx from 'clsx';\nimport { addItem } from 'components/cart/actions';\nimport { useProduct } from 'components/product/product-context';\nimport { Product, ProductVariant } from 'lib/shopify/types';\nimport { useActionState } from 'react';\nimport { toast } from 'sonner';\nimport { useCart } from './cart-context';\n\nfunction SubmitButton({\n  availableForSale,\n  selectedVariantId\n}: {\n  availableForSale: boolean;\n  selectedVariantId: string | undefined;\n}) {\n  const buttonClasses =\n    'relative flex w-full items-center justify-center rounded-md bg-white p-3 text-center text-sm font-medium text-black';\n  const disabledClasses = 'cursor-not-allowed opacity-60 hover:opacity-60';\n\n  if (!availableForSale) {\n    return (\n      <button disabled className={clsx(buttonClasses, disabledClasses)}>\n        Out Of Stock\n      </button>\n    );\n  }\n\n  if (!selectedVariantId) {\n    return (\n      <button\n        aria-label=\"Please select an option\"\n        disabled\n        className={clsx(buttonClasses, disabledClasses)}\n      >\n        Add To Cart\n      </button>\n    );\n  }\n\n  return (\n    <button\n      onClick={(e: React.FormEvent<HTMLButtonElement>) => {\n        if (!availableForSale) e.preventDefault();\n      }}\n      aria-label=\"Add to cart\"\n      className={clsx(buttonClasses, {\n        'hover:opacity-90': true\n      })}\n    >\n      Add To Cart\n    </button>\n  );\n}\n\nexport function AddToCart({ product }: { product: Product }) {\n  const { addCartItem } = useCart();\n  const { state } = useProduct();\n  const [message, formAction] = useActionState(addItem, null);\n\n  const defaultVariant = product.variants.length === 1 ? product.variants[0] : undefined;\n  const selectedVariant = product.variants.find((variant: ProductVariant) =>\n    variant.selectedOptions.every(\n      (option) => option.value === state[option.name.toLowerCase()]\n    )\n  );\n\n  const variantToUse = selectedVariant || defaultVariant;\n  const selectedVariantId = variantToUse?.id;\n  const isAvailableForSale = variantToUse?.availableForSale ?? false;\n\n  const actionWithVariant = formAction.bind(null, selectedVariantId);\n\n  return (\n    <form\n      action={async () => {\n        if (!variantToUse) return;\n\n        addCartItem(variantToUse, product);\n        actionWithVariant();\n        toast.success('Item added to cart!');\n      }}\n    >\n      <SubmitButton\n        availableForSale={isAvailableForSale}\n        selectedVariantId={selectedVariantId}\n      />\n      <p aria-live=\"polite\" className=\"sr-only\" role=\"status\">\n        {message}\n      </p>\n    </form>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AARA;;;;;;;;AAUA,SAAS,aAAa,EACpB,gBAAgB,EAChB,iBAAiB,EAIlB;IACC,MAAM,gBACJ;IACF,MAAM,kBAAkB;IAExB,IAAI,CAAC,kBAAkB;QACrB,qBACE,8OAAC;YAAO,QAAQ;YAAC,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EAAE,eAAe;sBAAkB;;;;;;IAItE;IAEA,IAAI,CAAC,mBAAmB;QACtB,qBACE,8OAAC;YACC,cAAW;YACX,QAAQ;YACR,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EAAE,eAAe;sBAChC;;;;;;IAIL;IAEA,qBACE,8OAAC;QACC,SAAS,CAAC;YACR,IAAI,CAAC,kBAAkB,EAAE,cAAc;QACzC;QACA,cAAW;QACX,WAAW,CAAA,GAAA,qIAAA,CAAA,UAAI,AAAD,EAAE,eAAe;YAC7B,oBAAoB;QACtB;kBACD;;;;;;AAIL;AAEO,SAAS,UAAU,EAAE,OAAO,EAAwB;IACzD,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,sIAAA,CAAA,UAAO,AAAD;IAC9B,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4IAAA,CAAA,aAAU,AAAD;IAC3B,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,iBAAc,AAAD,EAAE,0JAAA,CAAA,UAAO,EAAE;IAEtD,MAAM,iBAAiB,QAAQ,QAAQ,CAAC,MAAM,KAAK,IAAI,QAAQ,QAAQ,CAAC,EAAE,GAAG;IAC7E,MAAM,kBAAkB,QAAQ,QAAQ,CAAC,IAAI,CAAC,CAAC,UAC7C,QAAQ,eAAe,CAAC,KAAK,CAC3B,CAAC,SAAW,OAAO,KAAK,KAAK,KAAK,CAAC,OAAO,IAAI,CAAC,WAAW,GAAG;IAIjE,MAAM,eAAe,mBAAmB;IACxC,MAAM,oBAAoB,cAAc;IACxC,MAAM,qBAAqB,cAAc,oBAAoB;IAE7D,MAAM,oBAAoB,WAAW,IAAI,CAAC,MAAM;IAEhD,qBACE,8OAAC;QACC,QAAQ;YACN,IAAI,CAAC,cAAc;YAEnB,YAAY,cAAc;YAC1B;YACA,wIAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QAChB;;0BAEA,8OAAC;gBACC,kBAAkB;gBAClB,mBAAmB;;;;;;0BAErB,8OAAC;gBAAE,aAAU;gBAAS,WAAU;gBAAU,MAAK;0BAC5C;;;;;;;;;;;;AAIT","debugId":null}}]
}