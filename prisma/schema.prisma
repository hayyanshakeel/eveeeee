generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  inventory   Int      @default(0)
  slug        String   @unique
  imageUrl    String?
  status      String   @default("active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  cartItems            CartItem[]
  orderItems           OrderItem[]
  productsToCollections ProductToCollection[]
}

model Collection {
  id          Int      @id @default(autoincrement())
  title       String
  handle      String   @unique
  description String?
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  productsToCollections ProductToCollection[]
}

model ProductToCollection {
  productId    Int
  collectionId Int

  product    Product    @relation(fields: [productId], references: [id], onDelete: Cascade)
  collection Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade)

  @@id([productId, collectionId])
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    String?
  sessionId String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cartItems CartItem[]
}

model CartItem {
  id        Int @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int @default(1)

  cart    Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([cartId, productId])
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]
}

model Order {
  id         Int      @id @default(autoincrement())
  customerId Int
  totalPrice Float
  status     String   @default("pending")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  cancelledAt DateTime?
  closedAt    DateTime?
  processedAt DateTime?


  customer   Customer   @relation(fields: [customerId], references: [id])
  orderItems OrderItem[]
}

model OrderItem {
  id        Int   @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int   @default(1)
  price     Float

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Coupon {
  id         Int      @id @default(autoincrement())
  code       String   @unique
  discount   Float
  validFrom  DateTime
  validUntil DateTime
  maxUses    Int      @default(0)
  usedCount  Int      @default(0)
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}